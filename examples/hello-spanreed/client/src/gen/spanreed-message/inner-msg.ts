// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { CloseConnection } from '../spanreed-message/close-connection';
import { ConnectionVerdict } from '../spanreed-message/connection-verdict';
import { ProxyMessage } from '../spanreed-message/proxy-message';


export enum InnerMsg {
  NONE = 0,
  ProxyMessage = 1,
  ConnectionVerdict = 2,
  CloseConnection = 3
}

export function unionToInnerMsg(
  type: InnerMsg,
  accessor: (obj:CloseConnection|ConnectionVerdict|ProxyMessage) => CloseConnection|ConnectionVerdict|ProxyMessage|null
): CloseConnection|ConnectionVerdict|ProxyMessage|null {
  switch(InnerMsg[type]) {
    case 'NONE': return null; 
    case 'ProxyMessage': return accessor(new ProxyMessage())! as ProxyMessage;
    case 'ConnectionVerdict': return accessor(new ConnectionVerdict())! as ConnectionVerdict;
    case 'CloseConnection': return accessor(new CloseConnection())! as CloseConnection;
    default: return null;
  }
}

export function unionListToInnerMsg(
  type: InnerMsg, 
  accessor: (index: number, obj:CloseConnection|ConnectionVerdict|ProxyMessage) => CloseConnection|ConnectionVerdict|ProxyMessage|null, 
  index: number
): CloseConnection|ConnectionVerdict|ProxyMessage|null {
  switch(InnerMsg[type]) {
    case 'NONE': return null; 
    case 'ProxyMessage': return accessor(index, new ProxyMessage())! as ProxyMessage;
    case 'ConnectionVerdict': return accessor(index, new ConnectionVerdict())! as ConnectionVerdict;
    case 'CloseConnection': return accessor(index, new CloseConnection())! as CloseConnection;
    default: return null;
  }
}
