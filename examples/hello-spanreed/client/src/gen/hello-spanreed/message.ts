// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { ServerChatMessage } from '../hello-spanreed/server-chat-message';
import { ServerGameStateMessage } from '../hello-spanreed/server-game-state-message';


export enum Message {
  NONE = 0,
  ServerChatMessage = 1,
  ServerGameStateMessage = 2
}

export function unionToMessage(
  type: Message,
  accessor: (obj:ServerChatMessage|ServerGameStateMessage) => ServerChatMessage|ServerGameStateMessage|null
): ServerChatMessage|ServerGameStateMessage|null {
  switch(Message[type]) {
    case 'NONE': return null; 
    case 'ServerChatMessage': return accessor(new ServerChatMessage())! as ServerChatMessage;
    case 'ServerGameStateMessage': return accessor(new ServerGameStateMessage())! as ServerGameStateMessage;
    default: return null;
  }
}

export function unionListToMessage(
  type: Message, 
  accessor: (index: number, obj:ServerChatMessage|ServerGameStateMessage) => ServerChatMessage|ServerGameStateMessage|null, 
  index: number
): ServerChatMessage|ServerGameStateMessage|null {
  switch(Message[type]) {
    case 'NONE': return null; 
    case 'ServerChatMessage': return accessor(index, new ServerChatMessage())! as ServerChatMessage;
    case 'ServerGameStateMessage': return accessor(index, new ServerGameStateMessage())! as ServerGameStateMessage;
    default: return null;
  }
}
